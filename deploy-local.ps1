# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è whisper-dreamscribe

param(
    [Parameter()]
    [ValidateSet("build", "run", "clean", "stop", "logs", "push")]
    [string]$Action = "menu"
)

function Show-Banner {
    Write-Host "===============================================" -ForegroundColor Cyan
    Write-Host "üöÄ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ whisper-dreamscribe" -ForegroundColor Green
    Write-Host "===============================================" -ForegroundColor Cyan
    Write-Host ""
}

function Test-DockerInstallation {
    try {
        $null = Get-Command docker -ErrorAction Stop
        $null = Get-Command docker-compose -ErrorAction Stop
        Write-Host "‚úÖ Docker –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
        return $true
    }
    catch {
        Write-Host "‚ùå Docker –∏–ª–∏ Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!" -ForegroundColor Red
        Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è Windows" -ForegroundColor Yellow
        return $false
    }
}

function Initialize-Environment {
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    if (!(Test-Path ".env")) {
        Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..." -ForegroundColor Yellow
        @"
REDIS_HOST=redis
REDIS_PORT=6379
WHISPER_MODEL=large-v2
JOBS_QUEUE=transcription_jobs
RESULTS_QUEUE=transcription_results
WHISPER_THREADS=8
WHISPER_LANGUAGE=auto
"@ | Out-File -FilePath ".env" -Encoding UTF8
        Write-Host "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
    }

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
    if (!(Test-Path "logs")) {
        New-Item -ItemType Directory -Path "logs" | Out-Null
        Write-Host "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
    }

    # –°–æ–∑–¥–∞–Ω–∏–µ Docker —Å–µ—Ç–∏
    $networkExists = docker network ls --format "{{.Name}}" | Where-Object { $_ -eq "dreamscribe-network" }
    if (!$networkExists) {
        Write-Host "üåê –°–æ–∑–¥–∞–Ω–∏–µ Docker —Å–µ—Ç–∏..." -ForegroundColor Yellow
        docker network create dreamscribe-network | Out-Null
        Write-Host "‚úÖ –°–µ—Ç—å dreamscribe-network —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
    }
}

function Show-Menu {
    Write-Host "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:" -ForegroundColor Cyan
    Write-Host "1. –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å" -ForegroundColor White
    Write-Host "2. –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)" -ForegroundColor White
    Write-Host "3. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –æ—á–∏—Å—Ç–∫–æ–π –∫—ç—à–∞" -ForegroundColor White
    Write-Host "4. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã" -ForegroundColor White
    Write-Host "5. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏" -ForegroundColor White
    Write-Host "6. –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—Ä–∞–∑ –≤ Docker Hub" -ForegroundColor White
    Write-Host ""
}

function Build-And-Run {
    Write-Host "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow
    docker-compose build
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
        return $false
    }
    Write-Host "‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω" -ForegroundColor Green
    Start-Services
}

function Start-Services {
    Write-Host "üü¢ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
    docker-compose up -d
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤" -ForegroundColor Red
        return $false
    }

    Write-Host ""
    Write-Host "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Cyan
    Write-Host "   docker-compose ps                    - —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" -ForegroundColor White
    Write-Host "   docker-compose logs -f               - –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤" -ForegroundColor White
    Write-Host "   docker-compose logs -f whisper-dreamscribe - –ª–æ–≥–∏ whisper-dreamscribe" -ForegroundColor White
    Write-Host "   docker-compose stop                  - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤" -ForegroundColor White
    Write-Host "   docker-compose down                  - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" -ForegroundColor White
}

function Clean-Build {
    Write-Host "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Docker..." -ForegroundColor Yellow
    docker system prune -f | Out-Null
    Write-Host "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –±–µ–∑ –∫—ç—à–∞..." -ForegroundColor Yellow
    docker-compose build --no-cache
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
        return $false
    }
    Write-Host "‚úÖ –û–±—Ä–∞–∑ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω" -ForegroundColor Green
    Start-Services
}

function Stop-Services {
    Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
    docker-compose down
    Write-Host "‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
}

function Show-Logs {
    Write-Host "üìã –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ whisper-dreamscribe (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)..." -ForegroundColor Yellow
    docker-compose logs -f whisper-dreamscribe
}

function Push-Image {
    $registry = Read-Host "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Docker Hub username"
    if ([string]::IsNullOrEmpty($registry)) {
        Write-Host "‚ùå Username –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º" -ForegroundColor Red
        return $false
    }

    Write-Host "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏..." -ForegroundColor Yellow
    docker build -t "$registry/whisper-dreamscribe:latest" .
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
        return $false
    }

    Write-Host "üîê –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ö–æ–¥ –≤ Docker Hub..." -ForegroundColor Yellow
    docker login
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" -ForegroundColor Red
        return $false
    }

    Write-Host "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow
    docker push "$registry/whisper-dreamscribe:latest"
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
        return $false
    }

    Write-Host "‚úÖ –û–±—Ä–∞–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: $registry/whisper-dreamscribe:latest" -ForegroundColor Green
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
Show-Banner

if (!(Test-DockerInstallation)) {
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit 1
}

Initialize-Environment

if ($Action -eq "menu") {
    Show-Menu
    $choice = Read-Host "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-6)"
    
    switch ($choice) {
        "1" { Build-And-Run }
        "2" { Start-Services }
        "3" { Clean-Build }
        "4" { Stop-Services }
        "5" { Show-Logs }
        "6" { Push-Image }
        default { 
            Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" -ForegroundColor Red
            Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
            exit 1
        }
    }
} else {
    switch ($Action) {
        "build" { Build-And-Run }
        "run" { Start-Services }
        "clean" { Clean-Build }
        "stop" { Stop-Services }
        "logs" { Show-Logs }
        "push" { Push-Image }
    }
}

Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
